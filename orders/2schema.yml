openapi: 3.0.3
info:
  title: ordersAPI
  version: 1.0.0
  description: my_project_orders
paths:
  /api/v1/basket:
    get:
      operationId: basket_retrieve
      description: Класс для работы с корзиной пользователя
      tags:
      - basket
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: basket_create
      description: Класс для работы с корзиной пользователя
      tags:
      - basket
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: basket_update
      description: Класс для работы с корзиной пользователя
      tags:
      - basket
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: basket_destroy
      description: Класс для работы с корзиной пользователя
      tags:
      - basket
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/order:
    get:
      operationId: order_retrieve
      description: Класс для получения и размешения заказов пользователями
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: order_create
      description: Класс для получения и размешения заказов пользователями
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders:
    get:
      operationId: partner_orders_retrieve
      description: Класс для получения заказов поставщиками
      tags:
      - partner
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/state:
    get:
      operationId: partner_state_retrieve
      description: Класс для работы со статусом поставщика
      tags:
      - partner
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: partner_state_create
      description: Класс для работы со статусом поставщика
      tags:
      - partner
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: partner_update_create
      description: Класс для обновления прайса от поставщика
      tags:
      - partner
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/contact:
    get:
      operationId: user_contact_retrieve
      description: Класс для работы с контактами покупателей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: user_contact_create
      description: Класс для работы с контактами покупателей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: user_contact_update
      description: Класс для работы с контактами покупателей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: user_contact_destroy
      description: Класс для работы с контактами покупателей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/details:
    get:
      operationId: user_details_retrieve
      description: Класс для работы данными пользователя
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: user_details_create
      description: Класс для работы данными пользователя
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/login:
    post:
      operationId: user_login_create
      description: Класс для авторизации пользователей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/password_reset:
    post:
      operationId: user_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/user/password_reset/confirm:
    post:
      operationId: user_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/user/register:
    post:
      operationId: user_register_create
      description: Для регистрации покупателей
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register/confirm:
    post:
      operationId: user_register_confirm_create
      description: Класс для подтверждения почтового адреса
      tags:
      - user
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
